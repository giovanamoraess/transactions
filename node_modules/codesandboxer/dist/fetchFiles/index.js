'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _resolvePath = require('../utils/resolvePath');

var _resolvePath2 = _interopRequireDefault(_resolvePath);

var _replaceImports = require('../replaceImports');

var _replaceImports2 = _interopRequireDefault(_replaceImports);

var _ensureExample = require('./ensureExample');

var _ensureExample2 = _interopRequireDefault(_ensureExample);

var _ensurePkgJSON = require('./ensurePkgJSON');

var _ensurePkgJSON2 = _interopRequireDefault(_ensurePkgJSON);

var _fetchInternalDependencies = require('./fetchInternalDependencies');

var _fetchInternalDependencies2 = _interopRequireDefault(_fetchInternalDependencies);

var _constants = require('../constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref) {
    var examplePath = _ref.examplePath,
        pkgJSON = _ref.pkgJSON,
        gitInfo = _ref.gitInfo,
        _ref$importReplacemen = _ref.importReplacements,
        importReplacements = _ref$importReplacemen === undefined ? [] : _ref$importReplacemen,
        example = _ref.example,
        allowJSX = _ref.allowJSX;

    var config, pkg, _ref3, file, deps, internalImports, files, final;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            config = { allowJSX: !!allowJSX };
            _context.next = 3;
            return (0, _ensurePkgJSON2.default)(pkgJSON, importReplacements, gitInfo, config);

          case 3:
            pkg = _context.sent;
            _context.next = 6;
            return (0, _ensureExample2.default)(example, importReplacements, pkg, examplePath, gitInfo, config);

          case 6:
            _ref3 = _context.sent;
            file = _ref3.file;
            deps = _ref3.deps;
            internalImports = _ref3.internalImports;
            files = (0, _extends3.default)({}, _constants.baseFiles, {
              'example.js': {
                content: (0, _replaceImports2.default)(file, internalImports.map(function (m) {
                  return [m, './' + (0, _resolvePath2.default)(examplePath, m)];
                }))
              }
            });
            _context.next = 13;
            return (0, _fetchInternalDependencies2.default)(internalImports.map(function (m) {
              return (0, _resolvePath2.default)(examplePath, m);
            }), files, pkg, deps, gitInfo, importReplacements, config);

          case 13:
            final = _context.sent;
            return _context.abrupt('return', final);

          case 15:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function (_x) {
    return _ref2.apply(this, arguments);
  };
}();